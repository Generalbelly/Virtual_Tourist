[
 {
  "file": "/Users/shimmennobuyoshi/Downloads/Virtual_Tourist-master/Virtual_Tourist/PhotoAlbumViewController.swift",
  "offset": 2684,
  "remove": 4699,
  "text": "NSManagedObject, atIndexPath indexPath: NSIndexPath?, forChangeType type: NSFetchedResultsChangeType, newIndexPath: NSIndexPath?) {\n        switch type{\n        case .Insert:\n            insertedIndexPaths.append(newIndexPath!)\n            break\n        case .Delete:\n            deletedIndexPaths.append(indexPath!)\n            break\n        case .Update:\n            updatedIndexPaths.append(indexPath!)\n        default:\n            break\n        }\n    }\n\n    func controllerDidChangeContent(controller: NSFetchedResultsController) {\n        collectionView.performBatchUpdates({() -> Void in\n            for indexPath in self.insertedIndexPaths {\n                self.collectionView.insertItemsAtIndexPaths([indexPath])\n            }\n            for indexPath in self.deletedIndexPaths {\n                self.collectionView.deleteItemsAtIndexPaths([indexPath])\n            }\n            for indexPath in self.updatedIndexPaths {\n                self.collectionView.reloadItemsAtIndexPaths([indexPath])\n            }\n        }, completion: nil)\n    }\n\n    // View life cycle\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        var error: NSError?\n        do {\n            try fetchedResultsController.performFetch()\n        } catch let error1 as NSError {\n            error = error1\n        }\n        if let error = error {\n            abort()\n        }\n        fetchedResultsController.delegate = self\n        self.sharedSession = NSURLSession.sharedSession()\n        self.button.backgroundColor = UIColor.whiteColor().colorWithAlphaComponent(0.8)\n    }\n\n    override func viewWillAppear(animated: Bool) {\n        super.viewWillAppear(animated)\n        mapView.addAnnotation(destination!.pin)\n        mapView.showAnnotations([destination!.pin], animated: true)\n        if self.shouldUpdateBottomButton {\n            self.updateBottomButton()\n        }\n    }\n\n    func sharedContext() -> NSManagedObjectContext {\n        return CoreDataStackManager.sharedInstance().managedObjectContext!\n    }\n\n    // collectionView\n\n    func numberOfSectionsInCollectionView(collectionView: UICollectionView) -> Int {\n        return self.fetchedResultsController.sections?.count ?? 0\n    }\n\n    func configureCell(cell: CollectionViewCell, atIndexPath indexPath: NSIndexPath) {\n        let pic = self.fetchedResultsController.objectAtIndexPath(indexPath) as! Picture\n            if pic.image != nil {\n                cell.imageView.image = pic.image\n                if cell.activityIndicator.isAnimating() {\n                    cell.activityIndicator.stopAnimating()\n                }\n            } else {\n                let imgURL = NSURL(string: pic.imageUrlString!)\n                let request: NSURLRequest = NSURLRequest(URL: imgURL!)\n                let task = self.sharedSession?.dataTaskWithRequest(request) { data, res, error in\n                    if error == nil {\n                        let image = UIImage(data: data)\n                        ImageHandler.sharedImageHandler.storeImage(image!, identifier: pic.id!)\n                        dispatch_async(dispatch_get_main_queue()) {\n                            cell.imageView.image = image\n                            if cell.activityIndicator.isAnimating() {\n                                cell.activityIndicator.stopAnimating()\n                            }\n                        }\n                    }\n                }\n                task!.resume()\n            }\n            if cell.activityIndicator.isAnimating() {\n                cell.activityIndicator.stopAnimating()\n            }\n        if let index = self.selectedIndexes.indexOf(indexPath) {\n            cell.view.backgroundColor = UIColor.lightGrayColor().colorWithAlphaComponent(0.5)\n            cell.view.hidden = false\n        } else {\n            cell.view.hidden = true\n        }\n    }\n\n    func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {\n        let cell = collectionView.dequeueReusableCellWithReuseIdentifier(\"collectionViewCell\", forIndexPath: indexPath) as! CollectionViewCell\n        cell.backgroundColor = UIColor.grayColor()\n        cell.activityIndicator.startAnimating()\n        self.configureCell(cell, atIndexPath: indexPath)\n        return cell\n    }\n\n    func collectionView(collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {\n        let sectionInfo = self.fetchedResultsController.sections![section] as? NSFetchedResultsSectionInfo\n        return sectionInfo!.numberOfObjects\n    }\n\n    func collectionView(collectionView: UICollectionView, didSelectItemAtIndexPath indexPath: NSIndexPath) {\n        let cell = collectionView.cellForItemAtIndexPath(indexPath) as! CollectionViewCell\n        if let index = self.selectedIndexes.indexOf(",
 }
]
