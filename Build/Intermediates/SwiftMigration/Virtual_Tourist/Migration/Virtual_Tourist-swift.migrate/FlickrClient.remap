[
 {
  "file": "/Users/shimmennobuyoshi/Downloads/Virtual_Tourist-master/Virtual_Tourist/FlickrClient.swift",
  "offset": 1922,
  "remove": 1845,
  "text": "(try! NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.AllowFragments)) as! [String: AnyObject]\n                let info = parsedResult[\"photos\"] as! [String: AnyObject]\n                if let photoDictionary = info[\"photo\"] as? [[String: AnyObject]] {\n                    if photoDictionary.count > 0 {\n                        for item in photoDictionary {\n                            let imageUrlString = item[\"url_m\"] as! String\n                            let id = item[\"id\"] as! String\n                            let dic = [\"imageUrlString\": imageUrlString, \"id\": id]\n                            dics.append(dic)\n                        }\n                        completionHandler(success: true, dics: dics, error: nil)\n                    } else {\n                        completionHandler(success: false, dics: nil, error: nil)\n                    }\n                }\n            }\n        }\n        task.resume()\n\n    }\n\n    func handleFlickr(success: Bool, dics: [[String: String]], destination: Location,  completionHandler: ( Bool -> Void )) {\n        for item in dics {\n            let picture = Picture(dic: item, context: CoreDataStackManager.sharedInstance().managedObjectContext!)\n            picture.destination = destination\n        }\n        CoreDataStackManager.sharedInstance().saveContext()\n        completionHandler(true)\n    }\n\n    func escapedParameters(parameters: [String : AnyObject]) -> String {\n        var urlVars = [String]()\n        for (key, value) in parameters {\n            let stringValue = \"\\(value)\"\n            let escapedValue = stringValue.stringByAddingPercentEncodingWithAllowedCharacters(NSCharacterSet.URLQueryAllowedCharacterSet())\n            urlVars += [key + \"=\" + \"\\(escapedValue!)\"]\n        }\n        return (!urlVars.isEmpty ? \"?\" : \"\") + urlVars.joinWithSeparator(\"&\"",
 }
]
